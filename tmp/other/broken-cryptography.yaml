id: broken-cryptography

info:
  name: Android Broken Cryptography and Poor Key Management
  author: YoruYagami
  severity: medium
  description: |
    This template identifies insecure cryptographic practices such as hardcoded or predictable keys and the use of deprecated algorithms (e.g., RC4, MD4, MD5, SHA1) for encryption or hashing. Storing sensitive data with weak or predictable keys allows attackers to extract confidential information through reverse engineering. Deprecated algorithms are vulnerable and should not be used to protect sensitive data.
  remediation: |
    Avoid hardcoding cryptographic keys or using predictable keys. Use Android Keystore System for securely storing keys and implement strong encryption algorithms such as AES with GCM. Do not use deprecated algorithms like RC4, MD4, MD5, or SHA1; instead, use modern algorithms like SHA-256 for hashing or PBKDF2 with a salt for password storage.
    
file:
  - extensions:
      - all

    matchers:
      - type: regex
        regex:
          - 'SecretKeySpec\(.*".*"\)'
          - 'Cipher.getInstance\("AES/ECB/NoPadding"\)'
          - 'Cipher.getInstance\("DES"\)'
          - 'Cipher.getInstance\("RC4"\)'
          - 'MessageDigest.getInstance\("MD4"\)'
          - 'MessageDigest.getInstance\("MD5"\)'
          - 'MessageDigest.getInstance\("SHA1"\)'
          - 'new IvParameterSpec\(.*\)'
          - 'new SecretKeySpec\(.*,[ ]*\".*\"\)' # Searches for hardcoded keys
          - 'new PBEKeySpec\(".*".*\)' # Searches for hardcoded keys in password-based encryption
