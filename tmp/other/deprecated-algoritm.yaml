id: insecure-deprecated-algorithms

info:
  name: Android Insecure and Deprecated Algorithms Detection
  author: YoruYagami
  severity: critical
  description: |
    This template identifies the use of insecure or deprecated cryptographic algorithms in the application code. Using weak algorithms like RC4, MD4, MD5, and SHA1 for authorization checks, data storage, or communication exposes the application to vulnerabilities such as hash collisions or brute-force attacks. Developers should use stronger algorithms like AES with GCM mode for encryption and SHA-256 with salt for hashing sensitive data like passwords.
  remediation: |
    Replace the use of deprecated algorithms (e.g., MD5, SHA1) with modern cryptographic algorithms such as AES-GCM for encryption and SHA-256 with salt for hashing. Avoid using RC4, MD4, or MD5 as they are considered insecure.
    
file:
  - extensions:
      - all

    matchers:
      - type: regex
        regex:
          - 'Cipher.getInstance\("RC4"\)' # Identifies the use of RC4 algorithm
          - 'Cipher.getInstance\("DES"\)' # Identifies the use of DES algorithm
          - 'Cipher.getInstance\("RSA/ECB/PKCS1Padding"\)' # Deprecated RSA padding scheme
          - 'MessageDigest.getInstance\("MD4"\)' # Identifies the use of MD4
          - 'MessageDigest.getInstance\("MD5"\)' # Identifies the use of MD5
          - 'MessageDigest.getInstance\("SHA1"\)' # Identifies the use of SHA-1
          - 'Cipher.getInstance\("AES/ECB/NoPadding"\)' # Use of AES with insecure ECB mode
          - 'SecureRandom.getInstance\("SHA1PRNG"\)' # Use of insecure SHA1PRNG for random generation
          - 'Signature.getInstance\("MD5withRSA"\)' # Identifies the use of MD5 with RSA
          - 'Signature.getInstance\("SHA1withRSA"\)' # Identifies the use of SHA1 with RSA
