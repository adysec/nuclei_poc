id: insecure-deserialization

info:
  name: Insecure Deserialization JAVA
  author: sklnhunt
  severity: high
  description: Deserialization vulnerability in Java arises when an attacker can manipulate the serialized data to execute malicious code on the target system, allowing them to gain unauthorized access, steal sensitive data, or cause system-wide damage.
  reference: https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html#whitebox-review_2
  tags: java

file:
  - extensions:
    - java
  
    extractors:
      - type: regex
        name: readObject
        regex:
          - '.+\.readObject\(.*' 
        # This method is called when the object is being deserialized, and is used to read the object's state from the input stream.

      - type: regex
        name: readResolve
        regex:
          - '.+\.readResolve\(.*'
        # This method is called after the object has been deserialized and can be used to replace the deserialized object with a different object, which can lead to unexpected behavior.

      - type: regex
        name: readExternal
        regex:
          - '.+\.readExternal\(.*'
        # This method is used to read external data in a format specified by the class and can be used to execute arbitrary code.

      - type: regex
        name: readObjectNoData
        regex:
          - '.+\.readObjectNoData\(.*'
        # This method is used to initialize an object after it has been deserialized and can be used to execute malicious code.

      - type: regex
        name: ObjectMapper readValue
        regex:
          - '.+\.readValue\(.*'
      
      - type: regex
        name: XStream fromXML
        regex:
          - '.+\.fromXML\(.*'
      
      - type: regex
        name: ObjectInputStream readUnshared
        regex:
          - '.+\.readUnshared\(.*'
      
      - type: regex
        name: YAML load
        regex:
          - '.+\.load\(.*'
