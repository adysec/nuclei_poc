id: insecure-websocket-implementations-ultra-advanced

info:
  name: Ultra Advanced Insecure WebSocket Implementations Detection
  author: Unrealisedd
  severity: critical
  description: This template conducts an in-depth and sophisticated detection of insecure WebSocket implementations. It uses dynamic payloads, multi-step validation, advanced response analysis, error handling, and integrates with external services for detailed reporting and automated alerts. It also includes complex logic and adaptive testing to cover a wide range of insecure WebSocket configurations.
  tags: websocket, insecure, security, advanced, automation, external-integration, multi-step

variables:
  websocket_paths:
    - "/ws"
    - "/websocket"
    - "/socket"
    - "/chat"
    - "/api/v1/notifications"

  websocket_messages:
    - "PING"
    - "HELLO"
    - "TEST"
    - "AUTH"
    - "GET / HTTP/1.1"

  user_agents:
    - "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    - "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15"
    - "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36"

  external_service_url: "https://example-external-service.com/api"
  cleanup_script: |
    #!/bin/bash
    echo "Starting cleanup..."
    # Your cleanup commands here
    echo "Cleanup complete."

  dynamic_payloads:
    - "Cmd": ["curl -s -H 'Upgrade: websocket' -H 'Connection: Upgrade' -H 'Sec-WebSocket-Key: {{random_key()}}' -H 'Sec-WebSocket-Version: 13' {{url}}{{path}}"]
    - "Cmd": ["curl -s -H 'Upgrade: websocket' -H 'Connection: Upgrade' -H 'Sec-WebSocket-Key: {{random_key()}}' -H 'Sec-WebSocket-Version: 13' -d '{{random_message()}}' {{url}}{{path}}"]

requests:
  - method: GET
    path:
      - "{{url}}{{websocket_paths}}"

    headers:
      User-Agent: "{{user_agents}}"

    timeout: 10
    delay: 2
    concurrency: 5
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 101

      - type: word
        part: body
        words:
          - "Sec-WebSocket-Accept"
          - "Upgrade"
          - "WebSocket"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Sec-WebSocket-Accept: (.+)"
          - "Sec-WebSocket-Protocol: (.+)"

  - method: POST
    path:
      - "{{url}}{{websocket_paths}}"

    body: |
      {
        "message": "{{random_message()}}"
      }

    headers:
      User-Agent: "{{user_agents}}"
      Content-Type: "application/json"

    matchers:
      - type: status
        status:
          - 101

      - type: word
        part: body
        words:
          - "Sec-WebSocket-Accept"
          - "Upgrade"
          - "WebSocket"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Sec-WebSocket-Accept: (.+)"
          - "Sec-WebSocket-Protocol: (.+)"

  - method: GET
    path:
      - "{{url}}/api/v1/notifications"

    headers:
      User-Agent: "{{user_agents}}"

    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: body
        words:
          - "Notifications"
          - "Message"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Notifications"
          - "Message"

  - method: GET
    path:
      - "{{url}}/ws"

    headers:
      User-Agent: "{{user_agents}}"

    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: body
        words:
          - "WebSocket"
          - "Connection established"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "WebSocket"
          - "Connection established"

  - method: GET
    path:
      - "{{url}}/api/v1/notifications"

    headers:
      User-Agent: "{{user_agents}}"

    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: body
        words:
          - "Notifications"
          - "Message"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Notifications"
          - "Message"

  - method: GET
    path:
      - "{{url}}/socket"

    headers:
      User-Agent: "{{user_agents}}"

    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: body
        words:
          - "Socket"
          - "Connection established"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Socket"
          - "Connection established"

  - method: GET
    path:
      - "{{url}}/chat"

    headers:
      User-Agent: "{{user_agents}}"

    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: body
        words:
          - "Chat"
          - "Connection established"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Chat"
          - "Connection established"

rate-limit: 2
log-to: advanced-websocket-log.txt

# External Integration for Reporting
external-reporting:
  url: "{{external_service_url}}"
  method: POST
  body: |
    {
      "reportType": "Insecure WebSocket Implementation",
      "findings": "{{findings}}",
      "timestamp": "{{timestamp}}",
      "target": "{{url}}"
    }
  headers:
    Content-Type: "application/json"
    Authorization: "Bearer YOUR_API_KEY"

# Automated Alerts
alerts:
  - condition: found
    message: "Insecure WebSocket Implementation detected at {{url}}"
    method: email
    recipient: "security-team@example.com"
    subject: "Alert: Insecure WebSocket Implementation Detected"
    body: |
      An insecure WebSocket implementation was detected at {{url}}.
      Findings: {{findings}}
      Timestamp: {{timestamp}}
