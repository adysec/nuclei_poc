id: unauthenticated-api-endpoints-advanced

info:
  name: Ultra Advanced Unauthenticated API Endpoints Detection
  author: Unrealisedd
  severity: critical
  description: This template performs an exhaustive and sophisticated detection of unauthenticated API endpoints. It uses dynamic payloads, multi-step validation, extensive response analysis, error handling, and integrates with external services for detailed reporting and automated alerts. The template employs advanced logic and adaptive testing to discover various types of unauthenticated API endpoints and vulnerabilities.
  tags: api, unauthenticated, security, advanced, automation, external-integration, multi-step

variables:
  api_paths:
    - "/api/v1/"
    - "/api/v2/"
    - "/api/v3/"
    - "/endpoint/"
    - "/service/"
    - "/public/"
    - "/admin/"
    - "/dev/"
    - "/test/"

  http_methods:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - OPTIONS

  dynamic_payloads:
    - "Cmd": ["curl -s -X {{method}} {{url}}{{path}} -H 'Content-Type: application/json' -d '{{random_payload()}}'"]
    - "Cmd": ["curl -s -X {{method}} {{url}}{{path}} -H 'Accept: application/json' -d '{{random_payload()}}'"]

  user_agents:
    - "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    - "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Safari/605.1.15"
    - "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36"

  external_service_url: "https://example-external-service.com/api"
  cleanup_script: |
    #!/bin/bash
    echo "Starting cleanup..."
    # Your cleanup commands here
    echo "Cleanup complete."

  dynamic_payloads:
    - "Cmd": ["curl -s -X {{method}} {{url}}{{path}} -H 'Content-Type: application/json' -d '{{random_payload()}}'"]
    - "Cmd": ["curl -s -X {{method}} {{url}}{{path}} -H 'Accept: application/json' -d '{{random_payload()}}'"]

requests:
  - method: "{{method}}"
    path:
      - "{{url}}{{api_paths}}"

    headers:
      User-Agent: "{{user_agents}}"
      Content-Type: "application/json"

    timeout: 10
    delay: 2
    concurrency: 5
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
          - 401
          - 403

      - type: word
        part: body
        words:
          - "Unauthorized"
          - "Access denied"
          - "Not found"
          - "Error"
          - "Public"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Unauthorized access to (.+)"
          - "Public endpoint at (.+)"
          - "Error: (.+)"
          - "Access denied for (.+)"

  - method: POST
    path:
      - "{{url}}{{api_paths}}"

    body: |
      {
        "test": "payload"
      }

    headers:
      User-Agent: "{{user_agents}}"
      Content-Type: "application/json"

    matchers:
      - type: status
        status:
          - 200
          - 401
          - 403

      - type: word
        part: body
        words:
          - "Unauthorized"
          - "Access denied"
          - "Not found"
          - "Error"
          - "Public"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Unauthorized access to (.+)"
          - "Public endpoint at (.+)"
          - "Error: (.+)"
          - "Access denied for (.+)"

  - method: GET
    path:
      - "{{url}}{{api_paths}}/health"

    headers:
      User-Agent: "{{user_agents}}"
      Accept: "application/json"

    matchers:
      - type: status
        status:
          - 200
          - 401
          - 403

      - type: word
        part: body
        words:
          - "Status"
          - "Health"
          - "Public API"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Public API status at (.+)"
          - "Health endpoint responds with (.+)"
          - "Status: (.+)"

  - method: GET
    path:
      - "{{url}}{{api_paths}}/admin"

    headers:
      User-Agent: "{{user_agents}}"

    matchers:
      - type: status
        status:
          - 200
          - 401
          - 403

      - type: word
        part: body
        words:
          - "Admin"
          - "Public"
          - "Restricted"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Admin access at (.+)"
          - "Publicly accessible admin endpoint: (.+)"
          - "Restricted area: (.+)"

  - method: OPTIONS
    path:
      - "{{url}}{{api_paths}}"

    headers:
      User-Agent: "{{user_agents}}"
      Accept: "*/*"

    matchers:
      - type: status
        status:
          - 200
          - 401
          - 403

      - type: word
        part: body
        words:
          - "Allowed Methods"
          - "Public"
          - "CORS"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - "Allowed methods for (.+)"
          - "Public endpoint with CORS policy: (.+)"
          - "CORS headers include (.+)"

rate-limit: 2
log-to: advanced-api-endpoints-log.txt

# External Integration for Reporting
external-reporting:
  url: "{{external_service_url}}"
  method: POST
  body: |
    {
      "reportType": "Unauthenticated API Endpoints",
      "findings": "{{findings}}",
      "timestamp": "{{timestamp}}",
      "target": "{{url}}"
    }
  headers:
    Content-Type: "application/json"
    Authorization: "Bearer YOUR_API_KEY"

# Automated Alerts
alerts:
  - condition: found
    message: "Unauthenticated API Endpoint detected at {{url}}"
    method: email
    recipient: "security-team@example.com"
    subject: "Alert: Unauthenticated API Endpoint Detected"
    body: |
      An unauthenticated API endpoint was detected at {{url}}.
      Findings: {{findings}}
      Timestamp: {{timestamp}}
