id: CVE-2024-21762
info:
  name: Fortinet SSL VPN Out-of-bounds Write Vulnerability Check (CVE-2024-21762)
  author: LucianNitescu
  severity: Critical
  description: |
    A out-of-bounds write in Fortinet FortiOS versions 7.4.0 through 7.4.2, 7.2.0 through 7.2.6, 7.0.0 through 7.0.13, 6.4.0 through 6.4.14, 6.2.0 through 6.2.15, 6.0.0 through 6.0.17, FortiProxy versions 7.4.0 through 7.4.2, 7.2.0 through 7.2.8, 7.0.0 through 7.0.14, 2.0.0 through 2.0.13, 1.2.0 through 1.2.13, 1.1.0 through 1.1.6, 1.0.0 through 1.0.7 allows attacker to execute unauthorized code or commands via specifically crafted requests.
  reference:
    - https://bit-sentinel.com/cve-2024-21762-nuclei-template-for-scanning-fortigate-firewalls/
    - https://fortiguard.com/psirt/FG-IR-24-015
    - https://nvd.nist.gov/vuln/detail/CVE-2024-21762
    - https://github.com/BishopFox/cve-2024-21762-check
  remediation: |
    1. 官方已发布漏洞补丁及修复版本，请评估业务是否受影响后，酌情升级至安全版本。【备注】：建议您在升级前做好数据备份工作，避免出现意外。
    https://www.fortiguard.com/psirt/FG-IR-24-015
    2. 临时缓解方案：
      禁用SSLVPN（注意，只禁止Web模式无法防御此漏洞）
      在不影响业务的情况下配置访问控制策略，避免暴露至公网。
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2024-21762
    cwe-id: CWE-787
    cpe: cpe:2.3:a:fortinet:fortiproxy:*:*:*:*:*:*:*:*, cpe:2.3:o:fortinet:fortios:*:*:*:*:*:*:*:*
  metadata:
    date: 2024-02-09
    version: |
      1.0.0 <= FortiProxy < 2.0.14
      7.0.0 <= FortiProxy < 7.0.15
      7.2.0 <= FortiProxy < 7.2.9
      7.4.0 <= FortiProxy < 7.4.3
      6.0.0 <= FortiOS < 6.0.18
      6.2.0 <= FortiOS < 6.2.16
      6.4.0 <= FortiOS < 6.4.15
      7.0.0 <= FortiOS < 7.0.14
      7.2.0 <= FortiOS < 7.2.7
      7.4.0 <= FortiOS < 7.4.3
    verified: true
    max-request: 1
    vendor: fortinet
    product: fortinac
    shodan-query: title:"FortiNAC"
  tags: cve,cve2024,fortinet,vpn

flow: http(1) && code(1)

requests:
  - raw:
      - |+
        POST /remote/VULNCHECK HTTP/1.1
        Host: {{Hostname}}
        Transfer-Encoding: chunked

        0



    matchers-condition: and
    matchers:
      - type: word
        part: body
        words:
          - <script type='text/javascript' src='/remote/fgt_lang?lang=
        internal: true
      - type: status
        status:
          - 403
        internal: true


code:
  - engine:
      - py
      - python3
    source: |
      import socket, ssl, os
      context = ssl.SSLContext(ssl.PROTOCOL_TLS_CLIENT)
      context.check_hostname=False
      context.verify_mode=ssl.CERT_NONE

      # credits: https://github.com/BishopFox/cve-2024-21762-check

      TIMEOUT=5

      def send_req(host, req):
          try:
              s=socket.create_connection(host, timeout=5)
          except: return -1
          ss=context.wrap_socket(s)
          ss.send(req)
          try:
              return ss.read(2048)
          except socket.timeout:
              return 0

      check_req="""POST /remote/VULNCHECK HTTP/1.1\r
      Host: {}\r
      Transfer-Encoding: chunked\r
      \r
      0000000000000000FF\r
      \r
      """
      def check(host):
          baseurl="https://{}:{}".format(*host)
          r2=send_req(host, check_req.format(baseurl).encode())
          if r2==0: return "Vulnerable"
          else: return "Patched"

      if __name__=="__main__":
          try:
              host=os.getenv('Hostname').split(':')[0]
              port=int(os.getenv('Hostname').split(':')[1])
          except:
              print("fail...")
              exit()
          HOST=(host,port)
          print(check(HOST))

    matchers-condition: and
    matchers:
      - type: word
        words:
          - "Vulnerable"
# digest: 490a004630440220090d6daf1506d7a3df7dddf659d8ee7e7bf76762769d86cb2c8da443680b2bdf022064279faa00f7f5f57c4cd66484bb63466b44f6451cd6c6545dd98543ebaaae64:a4cb5594f69e0762bac9dbbc958de244